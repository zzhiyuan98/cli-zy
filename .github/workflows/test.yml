name: Test cli-zy on macOS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install cli-zy
      run: npm install -g .
      
    - name: Test cli-zy setup
      run: cli-zy setup
      
    - name: Verify Homebrew installation
      run: |
        if ! command -v brew >/dev/null 2>&1; then
          echo "❌ Homebrew installation failed"
          exit 1
        fi
        
        echo "✅ Homebrew installed successfully"
        brew --version
        
    - name: Verify Git installation
      run: |
        if ! command -v git >/dev/null 2>&1; then
          echo "❌ Git installation failed"
          exit 1
        fi
        
        echo "✅ Git installed successfully"
        git --version
        
    - name: Verify nvm installation
      run: |
        # 检查 nvm 是否已安装
        if [ ! -d "$HOME/.nvm" ]; then
          echo "❌ nvm directory not found"
          exit 1
        fi
        
        echo "✅ nvm directory exists"
        
        # 手动加载 nvm（在同一个 shell 会话中）
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        
        if ! command -v nvm >/dev/null 2>&1; then
          echo "❌ nvm failed to load"
          exit 1
        fi
        
        echo "✅ nvm loaded successfully"
        nvm --version
        
    - name: Verify fzf installation
      run: |
        if ! command -v fzf >/dev/null 2>&1; then
          echo "❌ fzf installation failed"
          exit 1
        fi
        
        echo "✅ fzf installed successfully"
        fzf --version
        
    - name: Verify Git aliases
      run: |
        if [ -f ~/.zshrc ] && grep -q "alias gca=" ~/.zshrc; then
          echo "✅ Git aliases configured successfully"
          grep "alias gca=" ~/.zshrc
        elif [ -f ~/.bashrc ] && grep -q "alias gca=" ~/.bashrc; then
          echo "✅ Git aliases configured successfully"
          grep "alias gca=" ~/.bashrc
        else
          echo "❌ Git aliases configuration failed"
          exit 1
        fi
        
    - name: Test Git aliases
      run: |
        # 测试 Git 别名配置
        echo "🔍 Checking shell configuration files..."
        ls -la ~/.zshrc ~/.bashrc 2>/dev/null || echo "No config files found"
        
        # 检查配置文件中的别名定义
        if [ -f ~/.zshrc ] && grep -q "alias gca=" ~/.zshrc; then
          echo "✅ Git alias 'gca' found in ~/.zshrc"
          grep "alias gca=" ~/.zshrc
        elif [ -f ~/.bashrc ] && grep -q "alias gca=" ~/.bashrc; then
          echo "✅ Git alias 'gca' found in ~/.bashrc"
          grep "alias gca=" ~/.bashrc
        else
          echo "❌ Git alias 'gca' not found in configuration files"
          echo "Configuration file contents:"
          if [ -f ~/.zshrc ]; then
            echo "~/.zshrc:"
            cat ~/.zshrc
          fi
          if [ -f ~/.bashrc ]; then
            echo "~/.bashrc:"
            cat ~/.bashrc
          fi
          exit 1
        fi
        
    - name: Show configuration files
      run: |
        echo "📄 Shell configuration files:"
        if [ -f ~/.zshrc ]; then
          echo "~/.zshrc exists"
          cat ~/.zshrc | grep -E "(alias|Homebrew|nvm|fzf|Oh My Posh|ws)" || echo "No relevant configurations found"
        fi
        if [ -f ~/.bashrc ]; then
          echo "~/.bashrc exists"
          cat ~/.bashrc | grep -E "(alias|Homebrew|nvm|fzf|Oh My Posh|ws)" || echo "No relevant configurations found"
        fi
        
    - name: Verify workspace shortcut function
      run: |
        # 检查 ws 函数是否已配置
        if [ -f ~/.zshrc ] && grep -q "ws ()" ~/.zshrc; then
          echo "✅ Workspace shortcut function found in ~/.zshrc"
          grep -A 10 "ws ()" ~/.zshrc
        elif [ -f ~/.bashrc ] && grep -q "ws ()" ~/.bashrc; then
          echo "✅ Workspace shortcut function found in ~/.bashrc"
          grep -A 10 "ws ()" ~/.bashrc
        else
          echo "❌ Workspace shortcut function not found in configuration files"
          exit 1
        fi
        